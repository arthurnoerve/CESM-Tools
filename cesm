#!/bin/bash

# CESM Tools
# Uses the Q manager, the create_newcase script and more to manage your CESM stuff.
#
#
# cesm config - setup env vars
#
# cesm list - list cases
# cesm create "case" - create new case
# cesm setup "case" - run cesm setup
# cesm build "case" - build/compile case
# cesm sub "case" - add case to queue
# cesm restart "case" "from case" - copy restart files from "from case" to the input folder of "case"

RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

function blue {
    echo -e "${BLUE}$1 ${NC}"
}
function red {
    echo -e "${RED}$1 ${NC}"
}

# Interface functions
function bash_line {
    echo "export $1=\"$2\" "
}
function print_help {
    echo "Please use one of the following commands:";
    echo "list"
    echo "create 'case'"
    echo "setup 'case'"
    echo "build 'case'"
    echo "prep 'case'"
    echo "sub 'case'"
    echo "auto 'case'"

    echo "clean 'case'"
    echo "delete 'case'"

    echo "restart 'case' 'from'"
}



command=$1

# Environment  errors
if [[ (-z "$CESM_ROOT" || -z "$CESM_WORK") && $command != "config" ]]; then
    red "Missing env variables"
    echo "Use 'cesm config' to setup..."
    exit 1
fi



# Manage program flow
case "$command" in
	list)
        ls "$CESM_ROOT/cases"
    ;;
    create)
        cas=$2
        blue "Creating case..."
        $CESM_ROOT/scripts/create_newcase -case $CESM_ROOT/cases/$cas -res f19_g16 -compset=B_1850_CAM5_CN -mach vilje
        cp -vf $CESM_ROOT/pes/env_mach_pes_COM_long_long.xml  $CESM_ROOT/cases/$cas/env_mach_pes.xml
        blue "Successfully created: $cas"
    ;;
    setup)
        cas=$2
        blue "Setting up case..."
        cd $CESM_ROOT/cases/$cas
        ./cesm_setup
        blue "Successfully set up: $cas"
    ;;
    build)
        cas=$2
        blue "Building case..."
        cd $CESM_ROOT/cases/$cas
        eval "./$cas.build"
        blue "Successfully built: $cas"
    ;;
    prep)
        cas=$2
        blue "Preparing case..."
        cd $CESM_ROOT/cases/$cas
        sed -i '.save' '/PBS -A/ s/$/ "$PROJ_ID"/' "$cas.run"
        head -n -5 "$cas.run"
        blue "Succcessfully prepared: $cas"
    sub)
        cas=$2
        job="./$cas.run"
        blue "Submitting $job"
        Q $job
    ;;
    auto)
        cas=$2
        cesm setup $cas
        cesm build $cas
        cesm prep $cas
        cesm sub $cas
    ;;
    clean)
        read -p "Are you sure (Y/y for yes)? " -n 1 -r
        echo    # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            cas=$2
            blue "Cleaning case..."
            rm -rf $CESM_WORK/$cas # Delete build and output
            cd $CESM_ROOT/cases/$cas # Go to case folder
            eval "./$cas.clean_build" #Clean the build
            blue "Succcessfully cleaned: $cas"
        fi
    ;;
    delete)
        read -p "Are you sure (Y/y for yes)? " -n 1 -r
        echo    # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]]
        then
            cas=$2
            blue "Deleting case..."
            rm -rf $CESM_WORK/$cas # Delete build and output
            rm -rf $CESM_ROOT/cases/$cas # Delete case folder itself
            blue "Succcessfully deleted: $cas"
        fi
    ;;
    restart)
        cas=$2
        from=$3
        echo "Not finished"
    ;;
    config)
        echo "Welcome to the setup of CESM tools"

        echo "Where is your CESM root located? (the folder with the case folder inside):"
        read cesm_root

        echo "Where is your CESM work folder located? (the folder where the bld and run folders are put):"
        read cesm_work

        echo "What is your project id?"
        read proj_id

        #Write out lines
        echo "Please copy the following lines to your .bashrc or .bash_profile"
        echo $(bash_line "CESM_ROOT" $cesm_root)
        echo $(bash_line "CESM_WORK" $cesm_work)
        echo $(bash_line "PROJ_ID" $proj_id)
    ;;
	help)
        print_help
		exit 1
	;;
esac
