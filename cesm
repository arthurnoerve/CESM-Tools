#!/bin/bash

# CESM Tools
# Uses the Q manager, the create_newcase script and more to manage your CESM stuff.



RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

function blue {
    echo -e "${BLUE}$1 ${NC}"
}
function red {
    echo -e "${RED}$1 ${NC}"
}

# Interface functions
function bash_line {
    echo "export $1=\"$2\" "
}
function print_help {
    echo "Please use one of the following commands:";
    echo "list"

    echo "create 'case'"

    echo "build 'case'"
    echo "submit 'case' - submit the case"

    echo "bldsub 'case' - build and submit when done"

    echo "clean 'case' - remove build"
    echo "delete 'case' - Remove case folder, build files and data"

    echo "help - print help menu"
}
function require_case {
    if [[ -z "$cas"  ]]; then
        red "Missing case"
        echo "Go to a case folder or add a casename "
        exit 1
    fi
}


# Get command
command=$1
shift;


# Missing ENV
if [[ (-z "$CESM_ROOT" || -z "$CESM_WORK") && $command != "config" ]]; then
    red "Missing env variables"
    echo "Use 'cesm config' to setup..."
    exit 1
fi


# Get casename
# If we are in a case folder; subfolder of $CESM_ROOT
BASE=$CESM_ROOT/cases
remains="${PWD#$BASE}"
remains=${remains#/} #remove slash in beginning if it exists
subfolder=${remains%/*}
if [[ -z $subfolder || "${PWD#$BASE}" = "$PWD"  ]]; then
    for last; do true; done
    cas=$last
    params=${@:1:$#-1}
else
    cas=$subfolder
    params=${@}
fi





# Manage program flow
case "$command" in
	list)
        ls "$CESM_ROOT/cases"
    ;;
    create)
        require_case

        compset="B_1850_CAM5_CN"

        l=${#params[@]}
        while test $l -gt 0; do
            val=${params[0]}
            case "$val" in
                -c|--compset)
                    params=("${params[@]:1}")
                    if [[ "${params[0]}" == "SOM" ]]; then
                        compset="E_1850_CAM5_CN"
                    fi
                ;;
                *)
                    red "$val is not a valid flag"
                    exit 0;
                ;;
            esac
            params=("${params[@]:1}")

            l=${#params[@]}
        done

        blue "Creating case..."
        $CESM_ROOT/scripts/create_newcase -case $CESM_ROOT/cases/$cas -res f19_g16 -compset=$compset -mach vilje
        cp -vf $CESM_ROOT/pes/env_mach_pes_COM_long_long.xml  $CESM_ROOT/cases/$cas/env_mach_pes.xml
        blue "Successfully created: $cas"


        # SETUP
        blue "Setting up case..."
        cd $CESM_ROOT/cases/$cas
        ./cesm_setup
        blue "Successfully set up: $cas"

        # PREP ( add proj number )
        blue "Preparing case..."
        cd $CESM_ROOT/cases/$cas
        sed --in-place=.original "/PBS -A/ s/$/ $PROJ_ID/" "$cas.run"
        blue "Top of run script:"
        head -n 3 "$cas.run"
        blue "Succcessfully prepared: $cas"
    ;;


    build)
        require_case

        blue "Building case..."
        cd $CESM_ROOT/cases/$cas
        eval "./$cas.build"
        blue "Successfully built: $cas"
    ;;
    submit)
        require_case

        job="$CESM_ROOT/cases/$cas/$cas.run"
        blue "Submitting $job"
        Q $job
    ;;

    bldsub)
        require_case

        cesm build $cas
        cesm submit $cas
    ;;


    clean)
        require_case

        read -p "Are you sure (Y/y for yes)? " -n 1 -r
        echo    # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]];
        then
            blue "Cleaning case..."
            rm -rf $CESM_WORK/$cas # Delete build and output
            cd $CESM_ROOT/cases/$cas # Go to case folder
            eval "./$cas.clean_build" #Clean the build
            blue "Succcessfully cleaned: $cas"
        fi
    ;;
    delete)
        require_case

        read -p "Are you sure (Y/y for yes)? " -n 1 -r
        echo    # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]];
        then
            blue "Deleting case..."
            rm -rf $CESM_WORK/$cas # Delete build and output
            rm -rf $CESM_ROOT/cases/$cas # Delete case folder itself
            blue "Succcessfully deleted: $cas"
        fi
    ;;

    config)
        echo "Welcome to the setup of CESM tools"

        echo "Where is your CESM root located? (the folder with the case folder inside):"
        read cesm_root

        echo "Where is your CESM work folder located? (the folder where the bld and run folders are put):"
        read cesm_work

        echo "What is your project id?"
        read proj_id

        #Write out lines
        echo "Please copy the following lines to your .bashrc or .bash_profile"
        echo $(bash_line "CESM_ROOT" $cesm_root)
        echo $(bash_line "CESM_WORK" $cesm_work)
        echo $(bash_line "PROJ_ID" $proj_id)
    ;;
	help)
        print_help
		exit 1
	;;
    *)
        print_help
        exit 1
    ;;
esac
